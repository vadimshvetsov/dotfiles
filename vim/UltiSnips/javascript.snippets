# State
snippet ss "Set State"
this.setState({ ${1}: ${2} });
endsnippet

# Component Lifecycle
snippet cdm "Component Did Mount" b
componentDidMount() {
	$1
}
endsnippet

snippet cdu "Component Did Update" b
componentDidUpdate(prevProps, prevState) {
	$1
}
endsnippet

snippet cwu "Component Will Unmount" b
componentWillUnmount() {
	$1
}
endsnippet

# React components
snippet rfc "React functional component"
import React from 'react';
import PropTypes from 'prop-types';

const ${1:`!v expand('%:t:r')`} = ($2) => (
	$4
);

$1.propTypes = {
	$3
};

export default $1;
endsnippet

snippet rcc "React class component"
import React, { Component} from 'react';
import PropTypes from 'prop-types';

class ${1:`!v expand('%:t:r')`} extends Component {
	static propTypes = {
		$2
	};

	render() {
		const { $3 } = this.props;
		return (
			$4
		);
	}
}

export default $1;
endsnippet

snippet rrcc "React Redux Class Component"
import React, { Component} from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';

class ${1:`!v expand('%:t:r')`} extends Component {
	static propTypes = {
		$3
	};

	render() {
		const { $4 } = this.props;
		return (
			$5
		);
	}
}

const mapStateToProps = state => ({
	$2
});

export default connect(mapStateToProps)($1);
endsnippet

snippet rsc "React Styled Component"
const $1 = styled.$2`
  $3
`;
endsnippet

snippet mstp "mapStateToProps"
const mapStateToProps = state => ({
  $1: $2
});
endsnippet
